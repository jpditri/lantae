#!/bin/bash
set -euo pipefail

# System PATH Installation Script
# Creates system-wide access to lantae command

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Detect OS
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    if [[ -f /etc/debian_version ]]; then
        OS="debian"
    elif [[ -f /etc/redhat-release ]]; then
        OS="redhat"
    elif [[ -f /etc/arch-release ]]; then
        OS="arch"
    else
        OS="linux"
    fi
elif [[ "$OSTYPE" == "darwin"* ]]; then
    OS="macos"
else
    OS="unknown"
fi

log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "${LOG_FILE:-install.log}"
}

show_progress() {
    echo -e "${BLUE}[PATH] $1${NC}"
    log "PATH: $1"
}

show_success() {
    echo -e "${GREEN}✓ [PATH] $1${NC}"
    log "PATH SUCCESS: $1"
}

show_warning() {
    echo -e "${YELLOW}⚠ [PATH] $1${NC}"
    log "PATH WARNING: $1"
}

error_exit() {
    echo -e "${RED}ERROR [PATH]: $1${NC}" >&2
    log "PATH ERROR: $1"
    exit 1
}

# Check if command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Get current directory (should be lantae project root)
get_lantae_path() {
    local current_dir
    current_dir=$(pwd)
    
    # Verify we're in the right directory
    if [[ ! -f "$current_dir/lantae" ]]; then
        error_exit "lantae executable not found in current directory: $current_dir"
    fi
    
    echo "$current_dir"
}

# Create wrapper script
create_wrapper_script() {
    local lantae_path="$1"
    local wrapper_content
    
    show_progress "Creating wrapper script..." >&2
    
    # Create wrapper script content
    wrapper_content="#!/bin/bash
# Lantae CLI Wrapper Script
# Auto-generated by install-system-path.sh

LANTAE_HOME=\"$lantae_path\"

# Change to lantae directory and run
cd \"\$LANTAE_HOME\" && exec bundle exec ruby \"\$LANTAE_HOME/bin/lantae\" \"\$@\"
"
    
    # Write wrapper script to temp location
    local wrapper_script="/tmp/lantae-wrapper-$$"
    echo "$wrapper_content" > "$wrapper_script"
    chmod +x "$wrapper_script"
    
    echo "$wrapper_script"
}

# Install to system PATH
install_to_system_path() {
    local lantae_path="$1"
    local wrapper_script="$2"
    
    show_progress "Installing to system PATH..."
    
    case "${OS:-unknown}" in
        "macos")
            # Try /usr/local/bin first (preferred on macOS)
            if [[ -w "/usr/local/bin" ]]; then
                cp "$wrapper_script" "/usr/local/bin/lantae" || error_exit "Failed to copy to /usr/local/bin"
                show_success "Installed to /usr/local/bin/lantae"
            elif [[ -d "/opt/homebrew/bin" ]] && [[ -w "/opt/homebrew/bin" ]]; then
                # Homebrew on M1/M2 Macs
                cp "$wrapper_script" "/opt/homebrew/bin/lantae" || error_exit "Failed to copy to /opt/homebrew/bin"
                show_success "Installed to /opt/homebrew/bin/lantae"
            else
                # Need sudo
                show_progress "System directories require admin privileges..."
                sudo cp "$wrapper_script" "/usr/local/bin/lantae" || error_exit "Failed to copy to /usr/local/bin (with sudo)"
                show_success "Installed to /usr/local/bin/lantae (with sudo)"
            fi
            ;;
        "debian"|"redhat"|"arch")
            # Try /usr/local/bin first
            if [[ -w "/usr/local/bin" ]]; then
                cp "$wrapper_script" "/usr/local/bin/lantae" || error_exit "Failed to copy to /usr/local/bin"
                show_success "Installed to /usr/local/bin/lantae"
            else
                # Need sudo
                show_progress "System directories require admin privileges..."
                sudo cp "$wrapper_script" "/usr/local/bin/lantae" || error_exit "Failed to copy to /usr/local/bin (with sudo)"
                show_success "Installed to /usr/local/bin/lantae (with sudo)"
            fi
            ;;
        *)
            error_exit "Unsupported OS for system PATH installation: ${OS:-unknown}"
            ;;
    esac
}

# Install to user PATH
install_to_user_path() {
    local lantae_path="$1"
    local wrapper_script="$2"
    
    show_progress "Installing to user PATH..."
    
    # Create user bin directory if it doesn't exist
    mkdir -p "$HOME/.local/bin"
    
    # Copy wrapper script
    cp "$wrapper_script" "$HOME/.local/bin/lantae" || error_exit "Failed to copy to user bin directory"
    show_success "Installed to $HOME/.local/bin/lantae"
    
    # Add to PATH if not already there
    local shell_config
    case "$SHELL" in
        */zsh)
            shell_config="$HOME/.zshrc"
            ;;
        */bash)
            if [[ -f "$HOME/.bashrc" ]]; then
                shell_config="$HOME/.bashrc"
            else
                shell_config="$HOME/.bash_profile"
            fi
            ;;
        */fish)
            shell_config="$HOME/.config/fish/config.fish"
            ;;
        *)
            shell_config="$HOME/.profile"
            ;;
    esac
    
    # Check if PATH is already configured
    if [[ -f "$shell_config" ]] && grep -q 'HOME/.local/bin' "$shell_config" 2>/dev/null; then
        show_success "User PATH already configured"
    else
        show_progress "Adding user bin to PATH in $shell_config..."
        
        # Create shell config if it doesn't exist
        touch "$shell_config"
        
        # Add PATH configuration
        case "$SHELL" in
            */fish)
                echo 'set -gx PATH ~/.local/bin $PATH' >> "$shell_config"
                ;;
            *)
                echo 'export PATH="$HOME/.local/bin:$PATH"' >> "$shell_config"
                ;;
        esac
        
        show_success "Added user bin to PATH"
        show_warning "Run 'source $shell_config' or restart your terminal to use 'lantae' command"
    fi
}

# Try system installation first, fallback to user
install_with_fallback() {
    local lantae_path="$1"
    local wrapper_script="$2"
    
    # Ask user preference
    echo ""
    echo -e "${BLUE}Choose installation location:${NC}"
    echo "1) System-wide (/usr/local/bin) - Available to all users"
    echo "2) User-only (~/.local/bin) - Only for current user"
    echo "3) Auto-detect (try system, fallback to user)"
    echo ""
    
    read -p "Enter your choice (1-3, default: 3): " install_choice
    install_choice=${install_choice:-3}
    
    case $install_choice in
        1)
            install_to_system_path "$lantae_path" "$wrapper_script"
            ;;
        2)
            install_to_user_path "$lantae_path" "$wrapper_script"
            ;;
        3)
            show_progress "Attempting system-wide installation..."
            if install_to_system_path "$lantae_path" "$wrapper_script" 2>/dev/null; then
                show_success "System-wide installation successful"
            else
                show_warning "System-wide installation failed, trying user installation..."
                install_to_user_path "$lantae_path" "$wrapper_script"
            fi
            ;;
        *)
            show_warning "Invalid choice, using auto-detect..."
            install_with_fallback "$lantae_path" "$wrapper_script"
            return
            ;;
    esac
}

# Verify installation
verify_installation() {
    show_progress "Verifying system PATH installation..."
    
    # Check if lantae command is available
    if command_exists lantae; then
        local lantae_version
        if lantae_version=$(lantae --version 2>/dev/null); then
            show_success "lantae command available globally"
            show_success "Version: $lantae_version"
        else
            show_warning "lantae command found but version check failed"
        fi
    else
        show_warning "lantae command not found in PATH"
        echo ""
        echo -e "${YELLOW}To use the lantae command:${NC}"
        echo "1. Restart your terminal, or"
        echo "2. Run: source ~/.bashrc (or appropriate shell config)"
        echo "3. Or use the full path: $(which lantae 2>/dev/null || echo 'Not found')"
    fi
}

# Clean up temporary files
cleanup() {
    local wrapper_script="$1"
    if [[ -f "$wrapper_script" ]]; then
        rm -f "$wrapper_script"
    fi
}

# Main execution
main() {
    show_progress "Installing Lantae to system PATH..."
    
    # Get lantae installation path
    local lantae_path
    lantae_path=$(get_lantae_path)
    show_progress "Lantae found at: $lantae_path"
    
    # Create wrapper script
    local wrapper_script
    wrapper_script=$(create_wrapper_script "$lantae_path")
    
    # Install with error handling
    if install_with_fallback "$lantae_path" "$wrapper_script"; then
        show_success "System PATH installation complete"
    else
        show_warning "System PATH installation completed with warnings"
    fi
    
    # Verify installation
    verify_installation
    
    # Cleanup
    cleanup "$wrapper_script"
    
    echo ""
    show_success "You can now use 'lantae' from anywhere in your terminal!"
    echo -e "${BLUE}Examples:${NC}"
    echo "  lantae                    # Start interactive mode"
    echo "  lantae \"Hello world\"      # Single prompt"
    echo "  lantae --help             # Show help"
}

main "$@"