#!/usr/bin/env node
/**
 * Simple Test for Lantae LSP Core Functionality
 */

const { execSync } = require('child_process');
const fs = require('fs-extra');
const path = require('path');

async function runSimpleTests() {
  console.log('🧪 Running Simple Lantae LSP Tests\n');
  
  const testDir = path.join(__dirname, 'test-simple');
  let passed = 0;
  let failed = 0;
  
  try {
    // Setup
    await fs.remove(testDir);
    await fs.ensureDir(testDir);
    process.chdir(testDir);
    
    console.log('1. Testing Python file generation...');
    try {
      execSync(`node ${path.join(__dirname, 'index.js')} "write a simple hello world in test.py"`, {
        encoding: 'utf8',
        timeout: 30000
      });
      
      const content = await fs.readFile('test.py', 'utf8');
      if (content.includes('Generated by Lantae AI') && content.includes('print')) {
        console.log('  ✅ Python generation successful');
        passed++;
      } else {
        console.log('  ❌ Python generation failed - missing content');
        failed++;
      }
    } catch (error) {
      console.log('  ❌ Python generation failed:', error.message);
      failed++;
    }
    
    console.log('\n2. Testing metadata file creation...');
    try {
      const metadataExists = await fs.pathExists('.lantae-generated.json');
      if (metadataExists) {
        const metadata = JSON.parse(await fs.readFile('.lantae-generated.json', 'utf8'));
        if (metadata.files && metadata.files.length > 0) {
          console.log('  ✅ Metadata tracking successful');
          passed++;
        } else {
          console.log('  ❌ Metadata file empty');
          failed++;
        }
      } else {
        console.log('  ❌ Metadata file not created');
        failed++;
      }
    } catch (error) {
      console.log('  ❌ Metadata test failed:', error.message);
      failed++;
    }
    
    console.log('\n3. Testing JavaScript file generation...');
    try {
      execSync(`node ${path.join(__dirname, 'index.js')} "create a simple function in hello.js"`, {
        encoding: 'utf8',
        timeout: 30000
      });
      
      const content = await fs.readFile('hello.js', 'utf8');
      if (content.includes('Generated by Lantae AI') && (content.includes('function') || content.includes('console'))) {
        console.log('  ✅ JavaScript generation successful');
        passed++;
      } else {
        console.log('  ❌ JavaScript generation failed - missing content');
        failed++;
      }
    } catch (error) {
      console.log('  ❌ JavaScript generation failed:', error.message);
      failed++;
    }
    
    console.log('\n4. Testing multi-language support...');
    try {
      execSync(`node ${path.join(__dirname, 'index.js')} "create a simple go hello world in hello.go"`, {
        encoding: 'utf8',
        timeout: 30000
      });
      
      if (await fs.pathExists('hello.go')) {
        const content = await fs.readFile('hello.go', 'utf8');
        if (content.includes('Generated by Lantae AI')) {
          console.log('  ✅ Go generation successful');
          passed++;
        } else {
          console.log('  ❌ Go generation failed - invalid content');
          failed++;
        }
      } else {
        console.log('  ❌ Go file not created');
        failed++;
      }
    } catch (error) {
      console.log('  ❌ Go generation failed:', error.message);
      failed++;
    }
    
    // Cleanup
    process.chdir(__dirname);
    // Keep test files for inspection: await fs.remove(testDir);
    
    console.log(`\n📊 Simple Test Results:`);
    console.log(`✅ Passed: ${passed}`);
    console.log(`❌ Failed: ${failed}`);
    
    if (failed === 0) {
      console.log('\n🎉 All simple tests passed! Core Lantae functionality is working.');
      return true;
    } else {
      console.log('\n⚠️  Some tests failed. Check the details above.');
      return false;
    }
    
  } catch (error) {
    console.error('Test suite failed:', error.message);
    return false;
  }
}

if (require.main === module) {
  runSimpleTests().then(success => {
    process.exit(success ? 0 : 1);
  });
}

module.exports = runSimpleTests;